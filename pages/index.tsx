import axios from 'axios'
import type { NextApiResponse, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { SyntheticEvent, useState } from 'react'
import {CopyToClipboard} from 'react-copy-to-clipboard';
import styles from '../styles/Home.module.css'
import { ErrorResponse, Output, OutputResponse } from './api/files'

const Home: NextPage = () => {
  const [filePath, setFilePath] = useState('');
  const [isRunning, setIsRunning] = useState(false);
  const [output, setOutput] = useState<Output | null>(null);

  const handleSubmit = async (e: SyntheticEvent) => {
    e.preventDefault();
    if (isRunning) {
      return;
    }
    try {
      setIsRunning(true);
      const res: any = await axios.post('/api/files', {
        filePath
      });
      if (res.data as OutputResponse) {
        setOutput(res.data.response);
      }
    } catch (error) {
      console.log("ðŸš€ ~ file: communications.tsx ~ line 37 ~ handleSubmit ~ error", error)
      alert(JSON.stringify(error, null, 2));
    }
    setIsRunning(false);
  }

  const handleOpen = async () => {
    if (output?.coveragePath) {
      try {
        const res: any = await axios.post('/api/coverage', {
          filePath: output.coveragePath
        });
      } catch (error) {
        alert(JSON.stringify(error, null, 2));
      }
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>IPTS Testing</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          IPTS Testing
        </h1>

        <div className="card my-4">
          <form onSubmit={handleSubmit}>
            <div className='ma-4'>
              <label className="label" htmlFor="filePath">File path</label>
              <input className="input is-primary" type="text" name='filePath' value={filePath} required onChange={(e) => setFilePath(e.target.value)} />
            </div>
            <div className='is-flex'>
              <div className='ma-4'>
                <button className='button is-dark' type='submit' disabled={isRunning}>Find</button>
              </div>
              <div className='ma-4'>
                <button className='button is-danger' type='button' onClick={() => setFilePath('')} disabled={isRunning}>Clear</button>
              </div>
            </div>

          </form>
        </div>

        <div className='card'>
          <header className="card-header">
            <p className="card-header-title">
              OUTPUT
            </p>
          </header>
          <label className="label ml-4 mt-4">Test file</label>
          <div className={styles.field}>
            <input className="input is-info" type="text" readOnly value={output?.filePath} />
            <CopyToClipboard text={output ? output.filePath : ''}>
              <button className='button is-info'>Copy</button>
            </CopyToClipboard>
          </div>

          <label className="label ml-4">Coverage file</label>
          <div className={styles.field}>
            <input className="input is-info" type="text" readOnly value={output?.coveragePath} />
            <button className='button is-info' onClick={handleOpen}>Open</button>
          </div>
        </div>

      </main>

      <footer className={styles.footer}>
      Powered by Hoang Doan
      </footer>
    </div>
  )
}

export default Home
